ActivePerl Business Edition â€” take 3
=====================================

In this document we'll describe yet another approach to how ppm might
behave after the introduction of the BE-license.  The background information is
still found in the sibling document [business-edition-take1](business-edition-take1.html).
See also [business-edition-take2](business-edition-take2.html).

In this version there is only one repository for each architecture/build
combination and the `packlist.xml` files are available without restrictions
from the standard repo location.  Some (or all) of the packages in these lists
might only be available to users with a valid BE-subscription.  The link to the
`ppd/ppmx` file will for the restricted packages go to the BE-repo; same URL as
now with `ppm4-be.activestate.com` replacing `ppm4.activestate.com`.

The root REPOSITORY element (of `package.xml` files) already support the BASE
attribute so it's easy to set this up so that all packages are linked to the
non-free repo, which would be what we want for the Solaris and AIX repos.  See
`perldoc ActivePerl::PPM::PPD`.


Legacy clients
--------------

Old ppm4 clients will deal with these URLs just fine but might not give the best
user experience as you will see something like this when you try to install a restricted
package:

    $ ppm install ACH
    Downloading ACH-0.01...failed 403 Forbidden
    ppm install failed: 403 Forbidden

The text "Forbidden" is actually provided in the HTTP status line from the
server, so we should be able to substitute it with something like "ActivePerl
Business Edition subscription required".  The actual URL that failed will not be
displayed; but you can see it with `ppm log`.

> [gisle: I noticed that HTTP have a "402 Payment required" status code that
> might actually be quite appropriate; but perhaps it's a bit on the offensive
> side. There might be other ways to obtain a BE-subscription than paying
> money.]

The legacy GUI will display all packages alike and fail will messages like those
shown above after the "Run marked actions" button is pressed.


BE-aware clients
----------------

First of all; BE-aware ppm clients will be able to provide the credentials for
users that have the BE-license installed and if the subscription has not
expired the packages will download and install as they have always done.
Everything just works as if all the packages had been free.

If the BE-license is missing (or the subscription has expired) then the
BE-aware client can improve the user experience by trying to upsell and
explain the situation with the restricted packages better.

This is easier to implement by making a few assumptions:

- packages can be classified as restricted or not by testing if the
  pkg.codebase starts with `"http://ppm4-be.activestate.com/"`.

- if one `ppm4-be.activestate.com` URL fails with a 403 status all requests
  to this domain will fail with 403.

- if a `ppm4-be.activestate.com` URL fails with a 403 status then the
  BE-subscription has expired.

The client wants to be able to know the BE-subscription state; one of
"invalid", "valid", "expired", "unknown".  This is determined by:

- **invalid:** no BE-license found on the host where the client runs

- **unknown:** BE-license present and last 200 or 403 response from
  `ppm4-be.activestate.com` was more than _n_-days ago, or no
  such response has been recorded.

- **valid:** BE-license present and last 200 or 403 response from
  `ppm4-be.activestate.com` was a 200 and less than _n_-days ago.

- **expired:** otherwise (implies that most recent response was 403)

When the ppm client starts up and if the BE-subscription state is "unknown" then
it checks if there are any restricted packages in the enabled repos.  If so it
will try to access `http://ppm4-be.activestate.com/status`.  If this gives a
200 or 403 response then the BE-subscription state is set to either "valid" or
"expired" accordingly.  Any other response produce an error for the user to see
but does not abort further action and the state continues to be "unknown".

If the BE-subscription state is "invalid" or "expired" then the GUI will gray
out the version number in the _available_ colum of all the restricted packages;
and the "Mark for install [+]" button will be disabled when such a package is
selected.  The "Details" pane at the bottom of the screen will explain why
install is disabled.  There will be a link from the "Details" pane to a
web-page where the user can read about the Business Edition and buy it.

A restricted package could already be installed; and the GUI should still allow
the user to uninstall the package.  This means restricted packages must still be
selectable.

The command line client will in a similar way mark the `ppm search`, `ppm tree`
and `ppm describe` output so that it is clear what packages are restricted and
can't be installed.  If the users tries to run `ppm install` and some of the
requested packages are restricted then a message similar to the one described
for the GUI above is displayed and the install is aborted.

The `http://ppm4-be.activestate.com/status` 200 response should contain
information about when the subscription expires.  This information would then
be stored by the client and be displayed in the GUI About dialog and by the
`ppm repo describe` command.

The `http://ppm4-be.activestate.com/status` 403 response content should contain
the phrases used to upsell BE-subscription, and these will replace the phrasing
built into the client.  This allow us to control how upsells are presented to
the user when the conditions of the BE-subscription change in the future.  The
phrasing might need to differ in the GUI and the command line version so it
should be possible to set these individually.


Server side considerations
--------------------------

The simplest setup on the server would be to serve both `ppm4.activestate.com`
and `ppm4-be.activestate.com` from the same file system tree.  There might not
be a need to actually deny access for restricted `ppd/ppmx` files if all the
corresponding links in the `package.xml` files goes to the BE-repo.  Few users
would bother to try to rewrite these links.  If we later actually find
considerable downloads of the non-free packages from the free repo we could
implement restrictions then.

Access to the `ppm4-be.activestate.com` repo without the correct credentials is
expected to give "403 Forbidden" error.  We would like to override the status
line message and the content-type and content of these errors.

The credentials are passed in the "BE" header containing the license serial
number and the APIPassword separated by '#'.

> [gisle: The client is flexible in terms of how the server wants the
> BE-credentials to be passed on.  The "BE" header stuff was just some default
> arrangement I came up with as a placeholder for whatever becomes the real
> thing.]
>
> [gisle: Will there be any reason to browse the BE-repo using a regular browser?
> How is regular client access different?  Should make the behaviour depend on
> User-Agent sniffing, or the way the credentials are provided.]
