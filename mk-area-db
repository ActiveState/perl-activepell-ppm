#!perl -w

use strict;
use lib "lib", "../ActiveState-YAML/lib";

BEGIN {
    # if running from the source tree
    unshift(@INC, "../../ActiveState-YAML/main/lib")
	unless -d "../ActiveState-YAML";
}

use ActiveState::YAML qw(yaml_load_file);
use ActivePerl;
my $modules = yaml_load_file("ppm.yml");

my $area_name = shift || "perl";

if ($area_name eq "perl") {
    # make entry for Perl as well since ppm4 will pick up its .packlist
    $modules->{Perl} = {
        title => "Perl",
        mm_fullext => "Perl",
        author => 'Larry Wall <larry@wall.org>',
        abstract => "Practical Extraction and Report Language",
	base_version => ActivePerl::perl_version(),
    };
}

use File::Path qw(rmtree);
use ActivePerl::PPM::InstallArea;
use ActivePerl::PPM::Package;

rmtree("dummy", 1);
mkdir("dummy", 0755);
my $area = ActivePerl::PPM::InstallArea->new(prefix => "dummy");
$area->{name} = $area_name;
$area->initialize;
my $dbh = $area->dbh;
$dbh->{AutoCommit} = 0;

for my $mod (sort {$a->{title} cmp $b->{title}} values %$modules) {
    my $name = $mod->{mm_fullext};
    $name =~ s,/,-,g;
    my $v = $mod->{base_version};
    $v .= "-r$mod->{revision}" if $mod->{revision};

    my $pkg = ActivePerl::PPM::Package->new(
        name => $name,
        version => $v,
        release_date => $mod->{date},
        author => $mod->{author},
        abstract => $mod->{abstract},
    );
    if ($name ne $mod->{title}) {
	warn "Warning: Will use $name for $mod->{title}";
	$pkg->{provide}{$mod->{title}} = 0;
    }
    if (my $dep = $mod->{dependency}) {
	for my $d (keys %$dep) {
	    $pkg->{require}{$d} = 0;
	}
    }
    $pkg->dbi_store($dbh);
}
$dbh->commit;
$dbh->disconnect;

#use Data::Dump; Data::Dump::dump($area, $modules);
rename("dummy/etc/ppm-$area_name-area.db", "ppm-$area_name-area.db");
#system("sqlite3 ppm-$area_name-area.db .dump");

rmtree("dummy", 0);

1;
